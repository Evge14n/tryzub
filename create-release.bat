@echo off
chcp 65001 >nul
cls

REM –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–ª—ñ–∑—É –º–æ–≤–∏ –¢—Ä–∏–∑—É–±
REM –ê–≤—Ç–æ—Ä: –ú–∞—Ä—Ç–∏–Ω—é–∫ –Ñ–≤–≥–µ–Ω

set /p VERSION=<VERSION
set AUTHOR=–ú–∞—Ä—Ç–∏–Ω—é–∫ –Ñ–≤–≥–µ–Ω
set DATE=06.04.2025

echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë   üá∫üá¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–ª—ñ–∑—É –¢—Ä–∏–∑—É–± v%VERSION%    ‚ïë
echo ‚ïë   –ê–≤—Ç–æ—Ä: %AUTHOR%              ‚ïë
echo ‚ïë   –î–∞—Ç–∞: %DATE%                      ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.

echo üî® –ó–±—ñ—Ä–∫–∞ —Ä–µ–ª—ñ–∑–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó...
cargo build --release

if %errorlevel% neq 0 (
    echo ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±—ñ—Ä–∫–∏!
    pause
    exit /b 1
)

echo üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É...
if not exist releases mkdir releases
if not exist releases\v%VERSION% mkdir releases\v%VERSION%

REM –°—Ç–≤–æ—Ä–µ–Ω–Ω—è ZIP –∞—Ä—Ö—ñ–≤—É
echo –ê—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤...
powershell -Command "Compress-Archive -Path 'target\release\tryzub.exe', 'README.md', 'LICENSE', 'AUTHORS.md', 'CHANGELOG.md', 'examples', 'stdlib', 'docs' -DestinationPath 'releases\v%VERSION%\tryzub-v%VERSION%-windows-x64.zip' -Force"

echo.
echo ‚úÖ –†–µ–ª—ñ–∑ —Å—Ç–≤–æ—Ä–µ–Ω–æ: releases\v%VERSION%\tryzub-v%VERSION%-windows-x64.zip
echo.
echo üìù –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:
echo   1. git add .
echo   2. git commit -m "üöÄ –†–µ–ª—ñ–∑ v%VERSION%"
echo   3. git tag -a v%VERSION% -m "–¢—Ä–∏–∑—É–± v%VERSION% - –ê–≤—Ç–æ—Ä: %AUTHOR%"
echo   4. git push origin main --tags
echo   5. –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ ZIP –Ω–∞ GitHub Releases
echo.
pause
